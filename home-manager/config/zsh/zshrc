# Set up zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

# Load pure theme
zinit ice pick"async.zsh" src"pure.zsh" # with zsh-async library that's bundled with it.
zinit light sindresorhus/pure

# Syntax highlighting & completions
zinit wait lucid light-mode for \
 atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
 blockf \
    zsh-users/zsh-completions \
 atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions

# History in cache directory
HISTFILE="$HOME/.cache/.zsh_history"
HISTSIZE=50000
zinit snippet OMZL::history.zsh

# OMZ
zinit snippet OMZL::key-bindings.zsh
zinit snippet OMZP::git
zinit snippet OMZP::kubectl
zinit snippet OMZP::sudo

# Enable searching through history
zinit wait lucid light-mode for \
  atload"bindkey '^[[A' history-substring-search-up; \
			bindkey '^[[B' history-substring-search-down;" \
  zsh-users/zsh-history-substring-search

# Completions
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={a-zA-Z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu select

# vi mode
bindkey -v
export KEYTIMEOUT=1
export VI_MODE_SET_CURSOR=true
zinit snippet OMZP::vi-mode

# Aliases
alias ls='ls --color'
alias l="eza --icons --git --time-style=long-iso --group --group-directories-first --color-scale=all";
alias ll="l --all --header --long";
alias lt="l --tree"
alias vim=nvim
alias cat=bat
alias lg=lazygit

# Env
export EDITOR="nvim"
export PATH=$HOME/.local/bin:$PATH

# Shell integration
source <(fzf --zsh)
eval "$(zoxide init zsh)"

function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# Source additional configs
[ -f "$HOME/.config/zsh/.zshextra" ] && source "$HOME/.config/zsh/.zshextra"

# Start zellij if using alacritty
[ -z "$ALACRITTY_LOG" ] || eval "$(zellij setup --generate-auto-start zsh)"
